package de.beinlich.markus.pizzaservice.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Version;

/**
 *
 * This class models a pizza-service customer 
 */
@Entity
@NamedQuery(name="Customer.findByEmail", query = "SELECT c FROM Customer c " +
        "WHERE c.email = :email" )
public class Customer implements Serializable {

    private static final long serialVersionUID = -565390959945252363L;

    /**
     *
     */
    public static final String findByEmail = "Customer.findByEmail";
    @Version
    private Long lastUpdate;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer customerId;
    @OneToMany(mappedBy = "customer", cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
    private List<OrderHeader> orderHeaders;
    private String firstName = "";
    private String lastName = "";
    private String email = "";
    private String phone = "";
    private String street= "";
    private String town = "";
    private String postcode = "";

    /**
     *
     */
    public Customer() {
    }

    /**
     *
     * @return Id of the customer. can be null. Generated by Database
     */
    public Integer getCustomerId() {
        return customerId;
    }

    /**
     *  Don't use this method. CustomerId should be generated by Database
     * @param customerId
     */
    public void setCustomerId(Integer customerId) {
        this.customerId = customerId;
    }

    /**
     *
     * @return FirstName of the customer - can be null
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     *
     * @param firstName
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     *
     * @return LastName of the customer - can be null
     */
    public String getLastName() {
        return lastName;
    }

    /**
     *
     * @param lastName
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     *
     * @return Email of the customer - can be null
     */
    public String getEmail() {
        return email;
    }
    
    public boolean hasEmail() {
        if (this.email == null || this.email.equals("")) {
            return false;
        }
        return true;
    }

    /**
     *
     * @param email of the customer - format of the email should be already checked
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     *
     * @return Phone-number of the customer - can be null
     */
    public String getPhone() {
        return phone;
    }

    /**
     *
     * @param phone number of the customer - format should be already checked
     */
    public void setPhone(String phone) {
        this.phone = phone;
    }

    /**
     *
     * @return
     */
    public String getStreet() {
        return street;
    }

    /**
     *
     * @param street
     */
    public void setStreet(String street) {
        this.street = street;
    }

    /**
     *
     * @return
     */
    public String getTown() {
        return town;
    }

    /**
     *
     * @param town
     */
    public void setTown(String town) {
        this.town = town;
    }

    /**
     *
     * @return
     */
    public String getPostcode() {
        return postcode;
    }

    /**
     *
     * @param postcode - format should be already checked
     */
    public void setPostcode(String postcode) {
        this.postcode = postcode;
    }

    /**
     *
     * @return
     */
    public Long getLastUpdate() {
        return lastUpdate;
    }

    /**
     *
     * @param lastUpdate
     */
    public void setLastUpdate(Long lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    /**
     *
     * @return immutable list of all orders, done by this customer
     */
    public List<OrderHeader> getOrderHeaders() {
        if (orderHeaders == null || orderHeaders.isEmpty()) {
            return Collections.emptyList();
        } else {
        return Collections.unmodifiableList(orderHeaders);
        }
    }

    /**
     *
     * @param orderHeaders
     */
    public void setOrderHeaders(List<OrderHeader> orderHeaders) {
        this.orderHeaders = orderHeaders;
    }

    public void addOrderHeader(OrderHeader orderHeader) {
        if (orderHeaders == null) {
            orderHeaders = new ArrayList();
        }
        orderHeaders.add(orderHeader);
    }
}
